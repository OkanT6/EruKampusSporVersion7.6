// <auto-generated />
using System;
using EruKampusSpor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EruKampusSpor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250113213321_mig_2")]
    partial class mig_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EruKampusSpor.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TesisId")
                        .HasColumnType("int");

                    b.Property<string>("adminKullanıcıAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TesisId")
                        .IsUnique();

                    b.ToTable("Adminler");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Brans", b =>
                {
                    b.Property<int>("BransId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BransId"));

                    b.Property<string>("BransAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BransId");

                    b.ToTable("Branslar");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Kullanıcı", b =>
                {
                    b.Property<int>("KullanıcıId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullanıcıId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KullanıcıId");

                    b.ToTable("Kullanıcılar");
                });

            modelBuilder.Entity("EruKampusSpor.Models.KullanıcıDetay", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KullanıcıDetayları");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Rezervasyon", b =>
                {
                    b.Property<int>("SeansId")
                        .HasColumnType("int");

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("int");

                    b.Property<bool>("IptalEdildi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RezerveEdilmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("SeansId", "KullanıcıId");

                    b.HasIndex("KullanıcıId");

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Salon", b =>
                {
                    b.Property<int>("SalonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalonId"));

                    b.Property<string>("SalonaAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TesisId")
                        .HasColumnType("int");

                    b.HasKey("SalonId");

                    b.HasIndex("TesisId");

                    b.ToTable("Salonlar");
                });

            modelBuilder.Entity("EruKampusSpor.Models.SalonBrans", b =>
                {
                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.Property<int>("BransId")
                        .HasColumnType("int");

                    b.HasKey("SalonId", "BransId");

                    b.HasIndex("BransId");

                    b.ToTable("SalonBrans");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Seans", b =>
                {
                    b.Property<int>("TesisId")
                        .HasColumnType("int");

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("SeansSaati")
                        .HasColumnType("time");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("date");

                    b.Property<bool>("Dolu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Kontenjan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("RezerveEdenKisiSayisi")
                        .HasColumnType("int");

                    b.Property<DateTime>("SeansBaslangicZamani")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasComputedColumnSql("CAST([Tarih] AS DATETIME) + CAST([SeansSaati] AS DATETIME)");

                    b.Property<int>("SeansCinsiyet")
                        .HasColumnType("int");

                    b.Property<int>("SeansId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeansId"));

                    b.Property<string>("yapılanBrans")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TesisId", "SalonId", "SeansSaati", "Tarih");

                    b.HasIndex("SalonId");

                    b.HasIndex("SeansId");

                    b.ToTable("Seanslar");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Tesis", b =>
                {
                    b.Property<int>("TesisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TesisId"));

                    b.Property<string>("TesisAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TesisId");

                    b.ToTable("Tesisler");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Admin", b =>
                {
                    b.HasOne("EruKampusSpor.Models.Tesis", "Tesis")
                        .WithOne("Admin")
                        .HasForeignKey("EruKampusSpor.Models.Admin", "TesisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tesis");
                });

            modelBuilder.Entity("EruKampusSpor.Models.KullanıcıDetay", b =>
                {
                    b.HasOne("EruKampusSpor.Models.Kullanıcı", "Kullanıcı")
                        .WithOne("KullanıcıDetay")
                        .HasForeignKey("EruKampusSpor.Models.KullanıcıDetay", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanıcı");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Rezervasyon", b =>
                {
                    b.HasOne("EruKampusSpor.Models.Kullanıcı", "Kullanıcı")
                        .WithMany("Rezervasyonlar")
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EruKampusSpor.Models.Seans", "Seans")
                        .WithMany("Rezervasyonlar")
                        .HasForeignKey("SeansId")
                        .HasPrincipalKey("SeansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanıcı");

                    b.Navigation("Seans");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Salon", b =>
                {
                    b.HasOne("EruKampusSpor.Models.Tesis", "Tesis")
                        .WithMany("Salonlar")
                        .HasForeignKey("TesisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tesis");
                });

            modelBuilder.Entity("EruKampusSpor.Models.SalonBrans", b =>
                {
                    b.HasOne("EruKampusSpor.Models.Brans", "Brans")
                        .WithMany("Salonlar")
                        .HasForeignKey("BransId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EruKampusSpor.Models.Salon", "Salon")
                        .WithMany("Branslar")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brans");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Seans", b =>
                {
                    b.HasOne("EruKampusSpor.Models.Salon", "Salon")
                        .WithMany("Seanslar")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EruKampusSpor.Models.Tesis", "Tesis")
                        .WithMany("Seanslar")
                        .HasForeignKey("TesisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Salon");

                    b.Navigation("Tesis");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Brans", b =>
                {
                    b.Navigation("Salonlar");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Kullanıcı", b =>
                {
                    b.Navigation("KullanıcıDetay")
                        .IsRequired();

                    b.Navigation("Rezervasyonlar");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Salon", b =>
                {
                    b.Navigation("Branslar");

                    b.Navigation("Seanslar");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Seans", b =>
                {
                    b.Navigation("Rezervasyonlar");
                });

            modelBuilder.Entity("EruKampusSpor.Models.Tesis", b =>
                {
                    b.Navigation("Admin")
                        .IsRequired();

                    b.Navigation("Salonlar");

                    b.Navigation("Seanslar");
                });
#pragma warning restore 612, 618
        }
    }
}
